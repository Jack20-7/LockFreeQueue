无锁队列的引入解决的问题:
1.频繁的锁操作带来的大量线程上下文切换的问题
2.插入元素或者删除元素时进行的频繁内存分配释放操作
3.频繁的线程抢占所带来的cpu高速缓冲失效的问题

无锁队列的适用场景:
1.处理的数据量非常的大,比如像每秒钟处理十万个请求这种情况
2.zeroMQ的无锁队列适用于单个生产者、单个消费者的场景


ypipe只能够用于单写单读的场景，它的效率也是最高的.

在多写的场景下，其他无锁队列相比于有锁队列而言，性能上没有本质上的提高
但是在多读的场景，无锁队列的性能就要明显高于有锁